/*
   Project architecture_1

   Gradle build file for JaCaMo Applications
   outubro 13, 2020 - 09:36:07
*/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.0'
group   'org.jacamo'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven { url "https://raw.githubusercontent.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
    maven { url "https://raw.github.com/embedded-mas/embedded-mas-mvn-repo/master" }

    
    flatDir {
       dirs 'lib'
    }

    mavenCentral()    
}

dependencies {
    implementation 'org.jacamo:jacamo:1.1-SNAPSHOT'
    implementation "embedded-mas:embedded-mas:0.029-SNAPSHOT"
    implementation "javard:javard:0.032-SNAPSHOT"
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}

task run (type: JavaExec, dependsOn: 'classes') {
    group       ' JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
        mkdir 'log'
    }
    main 'jacamo.infra.JaCaMoLauncher'
    args 'perception_action.jcm'
    classpath sourceSets.main.runtimeClasspath
}


task uberJar(type: Jar, dependsOn: 'classes') {
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    baseName = 'jacamo-architecture_1' // the name must start with jacamo so that jacamo...jar is found in the classpath
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar

    doFirst {
        copy {
            from 'architecture_1.jcm'
            rename 'architecture_1.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
